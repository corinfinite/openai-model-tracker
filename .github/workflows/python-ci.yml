name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      if: github.event_name == 'pull_request'
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - uses: actions/checkout@v3
      if: github.event_name != 'pull_request'
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.0.0
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
        
    - name: Install dependencies
      run: poetry install --with dev
      
    # For main branch pushes - just check, don't fix
    - name: Check formatting with Black (main branch)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: poetry run black --check "openai-model-tracker/"
      
    # For PRs - fix formatting issues automatically
    - name: Check Black formatting
      if: github.event_name == 'pull_request'
      id: check
      continue-on-error: true  # Allow the workflow to continue if black finds formatting issues
      run: poetry run black --check "openai-model-tracker/"
      
    - name: Apply Black formatting
      if: github.event_name == 'pull_request' && steps.check.outcome == 'failure'
      run: poetry run black "openai-model-tracker/"
      
    - name: Commit formatting changes 
      if: github.event_name == 'pull_request' && steps.check.outcome == 'failure'
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "Apply automated Black formatting"
        file_pattern: 'openai-model-tracker/**/*.py'
      
    # Note: Special handling for mypy because hyphens in package/directory names
    # cause issues with Python's module resolution
    - name: Type check with MyPy
      run: |
        cd openai-model-tracker
        poetry run mypy __main__.py
