name: Check for New OpenAI Models

on:
  schedule:
    # Run daily at midnight UTC
    - cron: '0 0 * * *'
  # Allow manual trigger
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        # Full history needed for proper push
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.0.0
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
        
    - name: Install dependencies
      run: |
        poetry lock
        poetry install
    
    - name: Verify API key
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        if [ -z "$OPENAI_API_KEY" ]; then
          echo "❌ ERROR: OPENAI_API_KEY is not set in repository secrets"
          exit 1
        fi
      
    - name: Check for new models
      id: check_models
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        # Run OpenAI model update
        poetry run openai_model_tracker update --verbose
        
        # Check specifically for changes to openai_models.json, not any file
        if [ -n "$(git status --porcelain openai_models.json)" ]; then
          echo "changes_detected=true" >> $GITHUB_OUTPUT
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.check_models.outputs.changes_detected == 'true'
      run: |
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        git add openai_models.json
        
        # Only proceed if there are actually staged changes
        if [ -n "$(git diff --cached --name-only)" ]; then
          git commit -m "Auto-update: Found new OpenAI models"
          git push
        fi
    
    - name: No changes
      if: steps.check_models.outputs.changes_detected == 'false'
      run: |
        echo "No new models found, no changes to commit."
