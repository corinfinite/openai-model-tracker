name: Check for New OpenAI Models

on:
  schedule:
    # Run daily at midnight UTC
    - cron: '0 0 * * *'
  # Allow manual trigger
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    # Add permissions for GitHub Actions
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        # Make sure we have full git history for proper push
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install and configure Poetry
      run: |
        python -m pip install poetry==2.0.0
        python -m poetry config virtualenvs.in-project true
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-venv-
        
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Check for new models and commit changes
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        # Enable command echoing for debugging
        set -e
        
        # Verify API key
        if [ -z "$OPENAI_API_KEY" ]; then
          echo "❌ ERROR: OPENAI_API_KEY is not set in repository secrets"
          exit 1
        fi
        echo "✅ API key is properly set"
        
        # Verify poetry is installed correctly
        echo "Checking poetry installation..."
        poetry --version
        
        # Run the update command with error handling
        echo "Running update command to find and add new models"
        UPDATE_OUTPUT=$(poetry run openai_model_tracker update --verbose 2>&1) || {
          echo "❌ ERROR: Command failed with exit code $?"
          echo "Command output:"
          echo "$UPDATE_OUTPUT"
          exit 1
        }
        
        # Print the output for diagnostic purposes
        echo "Command output:"
        echo "$UPDATE_OUTPUT"
        
        # Check if there are changes to commit (using explicit git command)
        echo "Checking for changes in repository..."
        GIT_STATUS=$(git status --porcelain)
        
        # Debug output
        echo "Git status output:"
        echo "$GIT_STATUS"
        
        if [ -n "$GIT_STATUS" ]; then
          echo "Changes detected in the models file, committing and pushing..."
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add openai_models.json
          git commit -m "Auto-update: Found new OpenAI models"
          
          # Try to push changes
          if git push; then
            echo "✅ Successfully pushed changes to the repository!"
          else
            echo "❌ Failed to push changes. Check if the workflow has proper permissions."
            echo "   You can set them in Settings -> Actions -> General -> Workflow permissions"
            exit 1
          fi
        else
          echo "No new models found, no changes to commit."
        fi
